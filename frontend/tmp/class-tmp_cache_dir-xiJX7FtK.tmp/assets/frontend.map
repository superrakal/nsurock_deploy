{"version":3,"sources":["vendor/ember-cli/app-prefix.js","frontend/adapters/application.js","frontend/app.js","frontend/controllers/array.js","frontend/controllers/object.js","frontend/initializers/active-model-adapter.js","frontend/initializers/app-version.js","frontend/initializers/cookie.js","frontend/initializers/export-application-global.js","frontend/instance-initializers/active-model-adapter.js","frontend/instance-initializers/app-version.js","frontend/lib/cookie.js","frontend/router.js","frontend/services/socket-io.js","frontend/services/websockets.js","frontend/templates/application.js","frontend/tests/adapters/application.jshint.js","frontend/tests/helpers/resolver.js","frontend/tests/helpers/resolver.jshint.js","frontend/tests/helpers/start-app.js","frontend/tests/helpers/start-app.jshint.js","frontend/tests/integration/components/chatbox-component-test.js","frontend/tests/integration/components/file-upload-test.js","frontend/tests/integration/components/message-input-test.js","frontend/tests/integration/components/myfaculty-component-test.js","frontend/tests/integration/components/mysex-component-test.js","frontend/tests/integration/components/nickname-input-test.js","frontend/tests/integration/components/select-all-test.js","frontend/tests/integration/components/smiles-component-test.js","frontend/tests/integration/components/sticker-component-test.js","frontend/tests/integration/components/userfaculty-component-test.js","frontend/tests/test-helper.js","frontend/tests/test-helper.jshint.js","frontend/tests/unit/components/file-upload-test.js","frontend/tests/unit/components/nickname-input-test.js","frontend/tests/unit/components/smiles-component-test.js","frontend/tests/unit/components/sticker-component-test.js","frontend/tests/unit/controllers/application-test.js","frontend/tests/unit/controllers/chat-test.js","frontend/tests/unit/controllers/my-settings-test.js","frontend/tests/unit/controllers/searching-test.js","frontend/tests/unit/controllers/user-settings-test.js","frontend/tests/unit/initializers/register-socket-io-test.js","frontend/tests/unit/models/faculty-test.js","frontend/tests/unit/models/image-test.js","frontend/tests/unit/models/sticker-test.js","frontend/tests/unit/models/user-test.js","frontend/tests/unit/routes/application-test.js","frontend/tests/unit/routes/chat-test.js","frontend/tests/unit/routes/my-settings-test.js","frontend/tests/unit/routes/root-test.js","frontend/tests/unit/routes/searching-test.js","frontend/tests/unit/routes/user-settings-test.js","frontend/tests/unit/serializers/application-test.js","frontend/tests/unit/serializers/user-test.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('frontend/adapters/application', ['exports', 'active-model-adapter'], function (exports, ActiveModelAdapter) {\n\n  'use strict';\n\n  exports['default'] = ActiveModelAdapter['default'].extend({\n    namespace: 'api/v1'\n  });\n\n});","define('frontend/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'frontend/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n    rootElement: '#ember'\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  $(function () {\n    var token;\n    token = $('meta[name=\"csrf-token\"]').attr('content');\n    return $.ajaxPrefilter(function (options, originalOptions, xhr) {\n      return xhr.setRequestHeader('X-CSRF-Token', token);\n    });\n  });\n\n  exports['default'] = App;\n\n});","define('frontend/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('frontend/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('frontend/initializers/active-model-adapter', ['exports', 'active-model-adapter', 'active-model-adapter/active-model-serializer'], function (exports, ActiveModelAdapter, ActiveModelSerializer) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: 'active-model-adapter',\n    initialize: function initialize() {\n      var application = arguments[1] || arguments[0];\n      application.register('adapter:-active-model', ActiveModelAdapter['default']);\n      application.register('serializer:-active-model', ActiveModelSerializer['default']);\n    }\n  };\n\n});","define('frontend/initializers/app-version', ['exports', 'frontend/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('frontend/initializers/cookie', ['exports', 'frontend/lib/cookie'], function (exports, Cookie) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: 'cookie',\n    initialize: function initialize(container, app) {\n      app.register('cookie:main', Cookie['default']);\n    }\n  };\n\n});","define('frontend/initializers/export-application-global', ['exports', 'ember', 'frontend/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('frontend/instance-initializers/active-model-adapter', ['exports', 'active-model-adapter', 'active-model-adapter/active-model-serializer'], function (exports, ActiveModelAdapter, ActiveModelSerializer) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: 'active-model-adapter',\n    initialize: function initialize(applicationOrRegistry) {\n      var registry;\n      if (applicationOrRegistry.registry) {\n        // initializeStoreService was registered with an\n        // instanceInitializer. The first argument is the application\n        // instance.\n        registry = applicationOrRegistry.registry;\n      } else {\n        // initializeStoreService was called by an initializer instead of\n        // an instanceInitializer. The first argument is a registy. This\n        // case allows ED to support Ember pre 1.12\n        registry = applicationOrRegistry;\n      }\n\n      registry.register('adapter:-active-model', ActiveModelAdapter['default']);\n      registry.register('serializer:-active-model', ActiveModelSerializer['default']);\n    }\n  };\n\n});","define('frontend/instance-initializers/app-version', ['exports', 'frontend/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('frontend/lib/cookie', ['exports', 'ember'], function (exports, Em) {\n\n  'use strict';\n\n  exports['default'] = Em['default'].Object.extend({\n    setCookie: function setCookie(key, value, options) {\n      return new Em['default'].RSVP.Promise(function (resolve, reject) {\n        try {\n          Em['default'].$.cookie(key, value, options);\n          Em['default'].run(null, resolve);\n        } catch (e) {\n          Em['default'].run(null, reject, e);\n        }\n      });\n    },\n\n    getCookie: function getCookie(key) {\n      return Em['default'].$.cookie(key);\n    },\n\n    removeCookie: function removeCookie(key, options) {\n      return Em['default'].$.removeCookie(key, options);\n    }\n  });\n\n});","define('frontend/router', ['exports', 'ember', 'frontend/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router;\n\n  Router = Ember['default'].Router.extend();\n\n  Router.map(function () {\n    return this.route('root', {\n      path: '/'\n    });\n  });\n\n  exports['default'] = Router;\n\n});","define('frontend/services/socket-io', ['exports', 'ember', 'ember-websockets/helpers/socketio-proxy'], function (exports, Ember, SocketIOProxy) {\n\n  'use strict';\n\n  var filter = Array.prototype.filter;\n  var forEach = Array.prototype.forEach;\n\n  exports['default'] = Ember['default'].Service.extend({\n    /*\n    * Each element in the array is of the form:\n    *\n    * {\n    *    url: 'string'\n    *    socket: SocketIO Proxy object\n    * }\n    */\n    sockets: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.sockets = Ember['default'].A();\n    },\n\n    /*\n    * socketFor returns a socketio proxy object. On this object there is a property `socket`\n    * which contains the actual socketio object. This socketio object is cached based off of the\n    * url meaning multiple requests for the same socket will return the same object.\n    */\n    socketFor: function socketFor(url) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var proxy = this.findSocketInCache(this.get('sockets'), url);\n\n      if (proxy && this.socketIsNotClosed(proxy.socket)) {\n        return proxy.socket;\n      }\n\n      proxy = SocketIOProxy['default'].create({\n        content: this,\n        socket: io(this.normalizeURL(url), options)\n      });\n\n      this.get('sockets').pushObject({\n        url: this.normalizeURL(url),\n        socket: proxy\n      });\n\n      return proxy;\n    },\n\n    /*\n    * The native websocket object will transform urls without a pathname to have just a /.\n    * As an example: ws://nsumint.ru:8080 would actually be ws://nsumint.ru:8080/ but ws://example.com/foo would not\n    * change. This function does this transformation to stay inline with the native websocket implementation.\n    *\n    */\n    normalizeURL: function normalizeURL(url) {\n      var parsedUrl = new URI(url);\n\n      if (parsedUrl.path() === '/' && url.slice(-1) !== '/') {\n        return url + '/';\n      }\n\n      return url;\n    },\n\n    socketIsNotClosed: function socketIsNotClosed(socket) {\n      return socket.socket.io.readyState !== 'closed';\n    },\n\n    /*\n    * closeSocketFor closes the socket for a given url.\n    */\n    closeSocketFor: function closeSocketFor(url) {\n      var _this = this;\n\n      var filteredSockets = [];\n\n      forEach.call(this.get('sockets'), function (item) {\n        if (item.url === _this.normalizeURL(url)) {\n          item.socket.close();\n        } else {\n          filteredSockets.push(item);\n        }\n      });\n\n      this.set('sockets', filteredSockets);\n    },\n\n    /*\n    * Returns the socket object from the cache if one matches the url else undefined\n    */\n    findSocketInCache: function findSocketInCache(socketsCache, url) {\n      var _this2 = this;\n\n      var cachedResults = filter.call(socketsCache, function (websocket) {\n        return websocket['url'] === _this2.normalizeURL(url);\n      });\n\n      if (cachedResults.length > 0) {\n        return cachedResults[0];\n      }\n    }\n  });\n\n});","define('frontend/services/websockets', ['exports', 'ember', 'ember-websockets/helpers/websocket-proxy'], function (exports, Ember, WebsocketProxy) {\n\n  'use strict';\n\n  var forEach = Array.prototype.forEach;\n  var filter = Array.prototype.filter;\n  var isArray = Ember['default'].isArray;\n\n  exports['default'] = Ember['default'].Service.extend({\n    /*\n    * Each element in the array is of the form:\n    *\n    * {\n    *    url: 'string'\n    *    socket: WebSocket Proxy object\n    * }\n    */\n    sockets: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.sockets = Ember['default'].A();\n    },\n\n    /*\n    * socketFor returns a websocket proxy object. On this object there is a property `socket`\n    * which contains the actual websocket object. This websocket object is cached based off of the url meaning\n    * multiple requests for the same socket will return the same object.\n    */\n    socketFor: function socketFor(url) {\n      var protocols = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n      var proxy = this.findSocketInCache(this.get('sockets'), url);\n\n      if (proxy && this.websocketIsNotClosed(proxy.socket)) {\n        return proxy.socket;\n      }\n\n      // Websockets allows either a string or array of strings to be passed as the second argument.\n      // This normalizes both cases into one where they are all arrays of strings and if you just pass\n      // a single string it becomes an array of one.\n      if (!isArray(protocols)) {\n        protocols = [protocols];\n      }\n\n      proxy = WebsocketProxy['default'].create({\n        content: this,\n        protocols: protocols,\n        socket: new WebSocket(this.normalizeURL(url), protocols)\n      });\n\n      // If there is an existing socket in place we simply update the websocket object and not\n      // the whole proxy as we dont want to destroy the previous listeners.\n      var existingSocket = this.findSocketInCache(this.get('sockets'), url);\n      if (existingSocket) {\n        existingSocket.socket.socket = proxy.socket;\n        return existingSocket.socket;\n      } else {\n        this.get('sockets').pushObject({\n          url: proxy.socket.url,\n          socket: proxy\n        });\n      }\n\n      return proxy;\n    },\n\n    /*\n    * closeSocketFor closes the socket for a given url.\n    */\n    closeSocketFor: function closeSocketFor(url) {\n      var _this = this;\n\n      var filteredSockets = [];\n\n      forEach.call(this.get('sockets'), function (item) {\n        if (item.url === _this.normalizeURL(url)) {\n          item.socket.close();\n        } else {\n          filteredSockets.push(item);\n        }\n      });\n\n      this.set('sockets', filteredSockets);\n    },\n\n    /*\n    * The native websocket object will transform urls without a pathname to have just a /.\n    * As an example: ws://nsumint.ru:8080 would actually be ws://nsumint.ru:8080/ but ws://example.com/foo would not\n    * change. This function does this transformation to stay inline with the native websocket implementation.\n    */\n    normalizeURL: function normalizeURL(url) {\n      var parsedUrl = new URI(url);\n\n      if (parsedUrl.path() === '/' && url.slice(-1) !== '/') {\n        return url + '/';\n      }\n\n      return url;\n    },\n\n    websocketIsNotClosed: function websocketIsNotClosed(websocket) {\n      return websocket.socket.readyState !== window.WebSocket.CLOSED;\n    },\n\n    /*\n    * Returns the socket object from the cache if one matches the url else undefined\n    */\n    findSocketInCache: function findSocketInCache(socketsCache, url) {\n      var _this2 = this;\n\n      var cachedResults = filter.call(socketsCache, function (websocket) {\n        return websocket['url'] === _this2.normalizeURL(url);\n      });\n\n      if (cachedResults.length > 0) {\n        return cachedResults[0];\n      }\n    }\n  });\n\n});","define('frontend/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 1,\n            \"column\": 87\n          }\n        },\n        \"moduleName\": \"frontend/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container-fluid\");\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"class\",\"text-center\");\n        var el3 = dom.createTextNode(\"Hi, Ember.js!\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[1,71],[1,81]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('frontend/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/helpers/resolver', ['exports', 'ember/resolver', 'frontend/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('frontend/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/helpers/start-app', ['exports', 'ember', 'frontend/app', 'frontend/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('frontend/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/integration/components/chatbox-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('chatbox-component', 'Integration | Component | chatbox component', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{chatbox-component}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#chatbox-component}}\\n  template block text\\n{{/chatbox-component}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/file-upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('file-upload', 'Integration | Component | file upload', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{file-upload}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#file-upload}}\\n  template block text\\n{{/file-upload}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/message-input-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('message-input', 'Integration | Component | message input', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{message-input}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#message-input}}\\n  template block text\\n{{/message-input}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/myfaculty-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('myfaculty-component', 'Integration | Component | myfaculty component', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{myfaculty-component}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#myfaculty-component}}\\n  template block text\\n{{/myfaculty-component}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/mysex-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('mysex-component', 'Integration | Component | mysex component', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{mysex-component}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#mysex-component}}\\n  template block text\\n{{/mysex-component}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/nickname-input-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('nickname-input', 'Integration | Component | nickname input', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{nickname-input}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#nickname-input}}\\n  template block text\\n{{/nickname-input}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/select-all-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('select-all', 'Integration | Component | select all', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{select-all}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#select-all}}\\n  template block text\\n{{/select-all}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/smiles-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('smiles-component', 'Integration | Component | smiles component', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{smiles-component}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#smiles-component}}\\n  template block text\\n{{/smiles-component}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/sticker-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sticker-component', 'Integration | Component | sticker component', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{sticker-component}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#sticker-component}}\\n  template block text\\n{{/sticker-component}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/integration/components/userfaculty-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('userfaculty-component', 'Integration | Component | userfaculty component', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n    this.render(hbs(\"{{userfaculty-component}}\"));\n    assert.equal(this.$().text().trim(), '');\n    this.render(hbs(\"{{#userfaculty-component}}\\n  template block text\\n{{/userfaculty-component}}\"));\n    return assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('frontend/tests/test-helper', ['frontend/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('frontend/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/components/file-upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('file-upload', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('frontend/tests/unit/components/nickname-input-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('nickname-input', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('frontend/tests/unit/components/smiles-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('smiles-component', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('frontend/tests/unit/components/sticker-component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sticker-component', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    var component;\n    assert.expect(2);\n    component = this.subject();\n    assert.equal(component._state, 'preRender');\n    this.render();\n    return assert.equal(component._state, 'inDOM');\n  });\n\n});","define('frontend/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('frontend/tests/unit/controllers/chat-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:chat', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('frontend/tests/unit/controllers/my-settings-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:my-settings', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('frontend/tests/unit/controllers/searching-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:searching', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('frontend/tests/unit/controllers/user-settings-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:user-settings', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var controller;\n    controller = this.subject();\n    return assert.ok(controller);\n  });\n\n});","define('frontend/tests/unit/initializers/register-socket-io-test', ['ember', 'frontend/initializers/register-socket-io', 'qunit'], function (Ember, register_socket_io, qunit) {\n\n  'use strict';\n\n  var application, registry;\n\n  application = null;\n\n  registry = null;\n\n  qunit.module('Unit | Initializer | register socket io', {\n    beforeEach: function beforeEach() {\n      return Ember['default'].run(function () {\n        application = Ember['default'].Application.create();\n        registry = application.registry;\n        return application.deferReadiness();\n      });\n    }\n  });\n\n  qunit.test('it works', function (assert) {\n    register_socket_io.initialize(registry, application);\n    return assert.ok(true);\n  });\n\n});","define('frontend/tests/unit/models/faculty-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('faculty', 'Unit | Model | faculty', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('frontend/tests/unit/models/image-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('image', 'Unit | Model | image', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('frontend/tests/unit/models/sticker-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('sticker', 'Unit | Model | sticker', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('frontend/tests/unit/models/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user', 'Unit | Model | user', {\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model;\n    model = this.subject();\n    return assert.ok(!!model);\n  });\n\n});","define('frontend/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:application', 'Unit | Route | application', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('frontend/tests/unit/routes/chat-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:chat', 'Unit | Route | chat', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('frontend/tests/unit/routes/my-settings-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:my-settings', 'Unit | Route | my settings', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('frontend/tests/unit/routes/root-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:root', 'Unit | Route | root', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('frontend/tests/unit/routes/searching-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:searching', 'Unit | Route | searching', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('frontend/tests/unit/routes/user-settings-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:user-settings', 'Unit | Route | user settings', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route;\n    route = this.subject();\n    return assert.ok(route);\n  });\n\n});","define('frontend/tests/unit/serializers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('application', 'Unit | Serializer | application', {\n    needs: ['serializer:application']\n  });\n\n  ember_qunit.test('it serializes records', function (assert) {\n    var record, serializedRecord;\n    record = this.subject();\n    serializedRecord = record.serialize();\n    return assert.ok(serializedRecord);\n  });\n\n});","define('frontend/tests/unit/serializers/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user', 'Unit | Serializer | user', {\n    needs: ['serializer:user']\n  });\n\n  ember_qunit.test('it serializes records', function (assert) {\n    var record, serializedRecord;\n    record = this.subject();\n    serializedRecord = record.serialize();\n    return assert.ok(serializedRecord);\n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('frontend/config/environment', ['ember'], function(Ember) {\n  return { 'default': {\"modulePrefix\":\"frontend\",\"environment\":\"development\",\"baseURL\":\"/\",\"rootElement\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"name\":\"frontend\",\"version\":\"0.0.0+dcc2d194\"},\"contentSecurityPolicyHeader\":\"Content-Security-Policy-Report-Only\",\"contentSecurityPolicy\":{\"default-src\":\"'none'\",\"script-src\":\"'self' 'unsafe-eval'\",\"font-src\":\"'self'\",\"connect-src\":\"'self'\",\"img-src\":\"'self'\",\"style-src\":\"'self'\",\"media-src\":\"'self'\"},\"exportApplicationGlobal\":true}};\n});\n\nif (runningTests) {\n  require(\"frontend/tests/test-helper\");\n} else {\n  require(\"frontend/app\")[\"default\"].create({\"name\":\"frontend\",\"version\":\"0.0.0+dcc2d194\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfxxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"frontend.js"}